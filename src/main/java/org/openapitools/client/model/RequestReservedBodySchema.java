/*
 * Merchant APIs
 * Technical document APIs for Merchant APIs
 *
 * The version of the OpenAPI document: 6.0
 * Contact: duong.vu@gotit.vn
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.RequestCheckMultipleBodySchemaSkusInfoInner;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * RequestReservedBodySchema
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-03-26T14:02:03.006856+07:00[Asia/Ho_Chi_Minh]", comments = "Generator version: 7.13.0-SNAPSHOT")
public class RequestReservedBodySchema {
  public static final String SERIALIZED_NAME_PIN = "pin";
  @SerializedName(SERIALIZED_NAME_PIN)
  @javax.annotation.Nullable
  private String pin;

  public static final String SERIALIZED_NAME_CODES = "codes";
  @SerializedName(SERIALIZED_NAME_CODES)
  @javax.annotation.Nullable
  private List<String> codes = new ArrayList<>();

  public static final String SERIALIZED_NAME_BILL_NUMBER = "bill_number";
  @SerializedName(SERIALIZED_NAME_BILL_NUMBER)
  @javax.annotation.Nullable
  private String billNumber;

  public static final String SERIALIZED_NAME_TOTAL_BILL = "total_bill";
  @SerializedName(SERIALIZED_NAME_TOTAL_BILL)
  @javax.annotation.Nullable
  private Integer totalBill;

  public static final String SERIALIZED_NAME_BILL_CREATED_AT = "bill_created_at";
  @SerializedName(SERIALIZED_NAME_BILL_CREATED_AT)
  @javax.annotation.Nullable
  private String billCreatedAt;

  public static final String SERIALIZED_NAME_SKUS_INFO = "skus_info";
  @SerializedName(SERIALIZED_NAME_SKUS_INFO)
  @javax.annotation.Nullable
  private List<RequestCheckMultipleBodySchemaSkusInfoInner> skusInfo = new ArrayList<>();

  public RequestReservedBodySchema() {
  }

  public RequestReservedBodySchema pin(@javax.annotation.Nullable String pin) {
    this.pin = pin;
    return this;
  }

  /**
   * Store pin
   * @return pin
   */
  @javax.annotation.Nullable
  public String getPin() {
    return pin;
  }

  public void setPin(@javax.annotation.Nullable String pin) {
    this.pin = pin;
  }


  public RequestReservedBodySchema codes(@javax.annotation.Nullable List<String> codes) {
    this.codes = codes;
    return this;
  }

  public RequestReservedBodySchema addCodesItem(String codesItem) {
    if (this.codes == null) {
      this.codes = new ArrayList<>();
    }
    this.codes.add(codesItem);
    return this;
  }

  /**
   * Array of 10-16 characters Got It voucher codes
   * @return codes
   */
  @javax.annotation.Nullable
  public List<String> getCodes() {
    return codes;
  }

  public void setCodes(@javax.annotation.Nullable List<String> codes) {
    this.codes = codes;
  }


  public RequestReservedBodySchema billNumber(@javax.annotation.Nullable String billNumber) {
    this.billNumber = billNumber;
    return this;
  }

  /**
   * Bill number will apply vouchers
   * @return billNumber
   */
  @javax.annotation.Nullable
  public String getBillNumber() {
    return billNumber;
  }

  public void setBillNumber(@javax.annotation.Nullable String billNumber) {
    this.billNumber = billNumber;
  }


  public RequestReservedBodySchema totalBill(@javax.annotation.Nullable Integer totalBill) {
    this.totalBill = totalBill;
    return this;
  }

  /**
   * Total bill amount
   * @return totalBill
   */
  @javax.annotation.Nullable
  public Integer getTotalBill() {
    return totalBill;
  }

  public void setTotalBill(@javax.annotation.Nullable Integer totalBill) {
    this.totalBill = totalBill;
  }


  public RequestReservedBodySchema billCreatedAt(@javax.annotation.Nullable String billCreatedAt) {
    this.billCreatedAt = billCreatedAt;
    return this;
  }

  /**
   * Bill creation time. Format: YYYY-MM-DD HH:MM:SS
   * @return billCreatedAt
   */
  @javax.annotation.Nullable
  public String getBillCreatedAt() {
    return billCreatedAt;
  }

  public void setBillCreatedAt(@javax.annotation.Nullable String billCreatedAt) {
    this.billCreatedAt = billCreatedAt;
  }


  public RequestReservedBodySchema skusInfo(@javax.annotation.Nullable List<RequestCheckMultipleBodySchemaSkusInfoInner> skusInfo) {
    this.skusInfo = skusInfo;
    return this;
  }

  public RequestReservedBodySchema addSkusInfoItem(RequestCheckMultipleBodySchemaSkusInfoInner skusInfoItem) {
    if (this.skusInfo == null) {
      this.skusInfo = new ArrayList<>();
    }
    this.skusInfo.add(skusInfoItem);
    return this;
  }

  /**
   * SKU information in bill_number
   * @return skusInfo
   */
  @javax.annotation.Nullable
  public List<RequestCheckMultipleBodySchemaSkusInfoInner> getSkusInfo() {
    return skusInfo;
  }

  public void setSkusInfo(@javax.annotation.Nullable List<RequestCheckMultipleBodySchemaSkusInfoInner> skusInfo) {
    this.skusInfo = skusInfo;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RequestReservedBodySchema requestReservedBodySchema = (RequestReservedBodySchema) o;
    return Objects.equals(this.pin, requestReservedBodySchema.pin) &&
        Objects.equals(this.codes, requestReservedBodySchema.codes) &&
        Objects.equals(this.billNumber, requestReservedBodySchema.billNumber) &&
        Objects.equals(this.totalBill, requestReservedBodySchema.totalBill) &&
        Objects.equals(this.billCreatedAt, requestReservedBodySchema.billCreatedAt) &&
        Objects.equals(this.skusInfo, requestReservedBodySchema.skusInfo);
  }

  @Override
  public int hashCode() {
    return Objects.hash(pin, codes, billNumber, totalBill, billCreatedAt, skusInfo);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RequestReservedBodySchema {\n");
    sb.append("    pin: ").append(toIndentedString(pin)).append("\n");
    sb.append("    codes: ").append(toIndentedString(codes)).append("\n");
    sb.append("    billNumber: ").append(toIndentedString(billNumber)).append("\n");
    sb.append("    totalBill: ").append(toIndentedString(totalBill)).append("\n");
    sb.append("    billCreatedAt: ").append(toIndentedString(billCreatedAt)).append("\n");
    sb.append("    skusInfo: ").append(toIndentedString(skusInfo)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("pin");
    openapiFields.add("codes");
    openapiFields.add("bill_number");
    openapiFields.add("total_bill");
    openapiFields.add("bill_created_at");
    openapiFields.add("skus_info");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to RequestReservedBodySchema
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!RequestReservedBodySchema.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in RequestReservedBodySchema is not found in the empty JSON string", RequestReservedBodySchema.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!RequestReservedBodySchema.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `RequestReservedBodySchema` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("pin") != null && !jsonObj.get("pin").isJsonNull()) && !jsonObj.get("pin").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pin` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pin").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("codes") != null && !jsonObj.get("codes").isJsonNull() && !jsonObj.get("codes").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `codes` to be an array in the JSON string but got `%s`", jsonObj.get("codes").toString()));
      }
      if ((jsonObj.get("bill_number") != null && !jsonObj.get("bill_number").isJsonNull()) && !jsonObj.get("bill_number").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `bill_number` to be a primitive type in the JSON string but got `%s`", jsonObj.get("bill_number").toString()));
      }
      if ((jsonObj.get("bill_created_at") != null && !jsonObj.get("bill_created_at").isJsonNull()) && !jsonObj.get("bill_created_at").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `bill_created_at` to be a primitive type in the JSON string but got `%s`", jsonObj.get("bill_created_at").toString()));
      }
      if (jsonObj.get("skus_info") != null && !jsonObj.get("skus_info").isJsonNull()) {
        JsonArray jsonArrayskusInfo = jsonObj.getAsJsonArray("skus_info");
        if (jsonArrayskusInfo != null) {
          // ensure the json data is an array
          if (!jsonObj.get("skus_info").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `skus_info` to be an array in the JSON string but got `%s`", jsonObj.get("skus_info").toString()));
          }

          // validate the optional field `skus_info` (array)
          for (int i = 0; i < jsonArrayskusInfo.size(); i++) {
            RequestCheckMultipleBodySchemaSkusInfoInner.validateJsonElement(jsonArrayskusInfo.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!RequestReservedBodySchema.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'RequestReservedBodySchema' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<RequestReservedBodySchema> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(RequestReservedBodySchema.class));

       return (TypeAdapter<T>) new TypeAdapter<RequestReservedBodySchema>() {
           @Override
           public void write(JsonWriter out, RequestReservedBodySchema value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public RequestReservedBodySchema read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of RequestReservedBodySchema given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of RequestReservedBodySchema
   * @throws IOException if the JSON string is invalid with respect to RequestReservedBodySchema
   */
  public static RequestReservedBodySchema fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, RequestReservedBodySchema.class);
  }

  /**
   * Convert an instance of RequestReservedBodySchema to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

