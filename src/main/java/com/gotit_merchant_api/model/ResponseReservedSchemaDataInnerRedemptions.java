/*
 * Merchant APIs
 * Technical document APIs for Merchant APIs
 *
 * The version of the OpenAPI document: 6.0
 * Contact: duong.vu@gotit.vn
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.gotit_merchant_api.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.gotit_merchant_api.model.ResponseCheckMultipleSchemaDataInnerRedemptionsRedeemSkuCodesInner;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.gotit_merchant_api.JSON;

/**
 * Include information related to the use of the voucher (all types)
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-05-30T17:38:34.348758+07:00[Asia/Ho_Chi_Minh]", comments = "Generator version: 7.12.0")
public class ResponseReservedSchemaDataInnerRedemptions {
  public static final String SERIALIZED_NAME_REDEEM_SKU_CODES = "redeem_sku_codes";
  @SerializedName(SERIALIZED_NAME_REDEEM_SKU_CODES)
  @javax.annotation.Nullable
  private List<ResponseCheckMultipleSchemaDataInnerRedemptionsRedeemSkuCodesInner> redeemSkuCodes = new ArrayList<>();

  public static final String SERIALIZED_NAME_REDEMPTION_VALUE = "redemption_value";
  @SerializedName(SERIALIZED_NAME_REDEMPTION_VALUE)
  @javax.annotation.Nullable
  private Integer redemptionValue;

  public ResponseReservedSchemaDataInnerRedemptions() {
  }

  public ResponseReservedSchemaDataInnerRedemptions redeemSkuCodes(@javax.annotation.Nullable List<ResponseCheckMultipleSchemaDataInnerRedemptionsRedeemSkuCodesInner> redeemSkuCodes) {
    this.redeemSkuCodes = redeemSkuCodes;
    return this;
  }

  public ResponseReservedSchemaDataInnerRedemptions addRedeemSkuCodesItem(ResponseCheckMultipleSchemaDataInnerRedemptionsRedeemSkuCodesInner redeemSkuCodesItem) {
    if (this.redeemSkuCodes == null) {
      this.redeemSkuCodes = new ArrayList<>();
    }
    this.redeemSkuCodes.add(redeemSkuCodesItem);
    return this;
  }

  /**
   * Contains redeemed SKU information of the voucher (for voucher type is conditional and support sku)
   * @return redeemSkuCodes
   */
  @javax.annotation.Nullable
  public List<ResponseCheckMultipleSchemaDataInnerRedemptionsRedeemSkuCodesInner> getRedeemSkuCodes() {
    return redeemSkuCodes;
  }

  public void setRedeemSkuCodes(@javax.annotation.Nullable List<ResponseCheckMultipleSchemaDataInnerRedemptionsRedeemSkuCodesInner> redeemSkuCodes) {
    this.redeemSkuCodes = redeemSkuCodes;
  }


  public ResponseReservedSchemaDataInnerRedemptions redemptionValue(@javax.annotation.Nullable Integer redemptionValue) {
    this.redemptionValue = redemptionValue;
    return this;
  }

  /**
   * Actual redemption value of voucher type &#x3D; conditional
   * @return redemptionValue
   */
  @javax.annotation.Nullable
  public Integer getRedemptionValue() {
    return redemptionValue;
  }

  public void setRedemptionValue(@javax.annotation.Nullable Integer redemptionValue) {
    this.redemptionValue = redemptionValue;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ResponseReservedSchemaDataInnerRedemptions responseReservedSchemaDataInnerRedemptions = (ResponseReservedSchemaDataInnerRedemptions) o;
    return Objects.equals(this.redeemSkuCodes, responseReservedSchemaDataInnerRedemptions.redeemSkuCodes) &&
        Objects.equals(this.redemptionValue, responseReservedSchemaDataInnerRedemptions.redemptionValue);
  }

  @Override
  public int hashCode() {
    return Objects.hash(redeemSkuCodes, redemptionValue);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ResponseReservedSchemaDataInnerRedemptions {\n");
    sb.append("    redeemSkuCodes: ").append(toIndentedString(redeemSkuCodes)).append("\n");
    sb.append("    redemptionValue: ").append(toIndentedString(redemptionValue)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("redeem_sku_codes");
    openapiFields.add("redemption_value");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ResponseReservedSchemaDataInnerRedemptions
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ResponseReservedSchemaDataInnerRedemptions.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ResponseReservedSchemaDataInnerRedemptions is not found in the empty JSON string", ResponseReservedSchemaDataInnerRedemptions.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ResponseReservedSchemaDataInnerRedemptions.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ResponseReservedSchemaDataInnerRedemptions` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (jsonObj.get("redeem_sku_codes") != null && !jsonObj.get("redeem_sku_codes").isJsonNull()) {
        JsonArray jsonArrayredeemSkuCodes = jsonObj.getAsJsonArray("redeem_sku_codes");
        if (jsonArrayredeemSkuCodes != null) {
          // ensure the json data is an array
          if (!jsonObj.get("redeem_sku_codes").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `redeem_sku_codes` to be an array in the JSON string but got `%s`", jsonObj.get("redeem_sku_codes").toString()));
          }

          // validate the optional field `redeem_sku_codes` (array)
          for (int i = 0; i < jsonArrayredeemSkuCodes.size(); i++) {
            ResponseCheckMultipleSchemaDataInnerRedemptionsRedeemSkuCodesInner.validateJsonElement(jsonArrayredeemSkuCodes.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ResponseReservedSchemaDataInnerRedemptions.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ResponseReservedSchemaDataInnerRedemptions' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ResponseReservedSchemaDataInnerRedemptions> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ResponseReservedSchemaDataInnerRedemptions.class));

       return (TypeAdapter<T>) new TypeAdapter<ResponseReservedSchemaDataInnerRedemptions>() {
           @Override
           public void write(JsonWriter out, ResponseReservedSchemaDataInnerRedemptions value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ResponseReservedSchemaDataInnerRedemptions read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ResponseReservedSchemaDataInnerRedemptions given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ResponseReservedSchemaDataInnerRedemptions
   * @throws IOException if the JSON string is invalid with respect to ResponseReservedSchemaDataInnerRedemptions
   */
  public static ResponseReservedSchemaDataInnerRedemptions fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ResponseReservedSchemaDataInnerRedemptions.class);
  }

  /**
   * Convert an instance of ResponseReservedSchemaDataInnerRedemptions to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

