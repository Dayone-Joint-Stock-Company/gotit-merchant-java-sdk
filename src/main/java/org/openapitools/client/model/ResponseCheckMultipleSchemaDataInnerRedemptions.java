/*
 * Merchant APIs
 * Technical document APIs for Merchant APIs
 *
 * The version of the OpenAPI document: 6.0
 * Contact: duong.vu@gotit.vn
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.ResponseCheckMultipleSchemaDataInnerRedemptionsRedeemSkuCodesInner;
import org.openapitools.client.model.ResponseCheckMultipleSchemaDataInnerRedemptionsUsedStore;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Include information related to the use of the voucher (all types)
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-04-23T16:39:17.709679+07:00[Asia/Ho_Chi_Minh]", comments = "Generator version: 7.13.0-SNAPSHOT")
public class ResponseCheckMultipleSchemaDataInnerRedemptions {
  public static final String SERIALIZED_NAME_REDEEM_SKU_CODES = "redeem_sku_codes";
  @SerializedName(SERIALIZED_NAME_REDEEM_SKU_CODES)
  @javax.annotation.Nullable
  private List<ResponseCheckMultipleSchemaDataInnerRedemptionsRedeemSkuCodesInner> redeemSkuCodes = new ArrayList<>();

  public static final String SERIALIZED_NAME_REDEMPTION_VALUE = "redemption_value";
  @SerializedName(SERIALIZED_NAME_REDEMPTION_VALUE)
  @javax.annotation.Nullable
  private Integer redemptionValue;

  public static final String SERIALIZED_NAME_USED_STORE = "used_store";
  @SerializedName(SERIALIZED_NAME_USED_STORE)
  @javax.annotation.Nullable
  private ResponseCheckMultipleSchemaDataInnerRedemptionsUsedStore usedStore;

  public static final String SERIALIZED_NAME_USED_DATE = "used_date";
  @SerializedName(SERIALIZED_NAME_USED_DATE)
  @javax.annotation.Nullable
  private String usedDate;

  public static final String SERIALIZED_NAME_BILL_NUMBER = "bill_number";
  @SerializedName(SERIALIZED_NAME_BILL_NUMBER)
  @javax.annotation.Nullable
  private String billNumber;

  public ResponseCheckMultipleSchemaDataInnerRedemptions() {
  }

  public ResponseCheckMultipleSchemaDataInnerRedemptions redeemSkuCodes(@javax.annotation.Nullable List<ResponseCheckMultipleSchemaDataInnerRedemptionsRedeemSkuCodesInner> redeemSkuCodes) {
    this.redeemSkuCodes = redeemSkuCodes;
    return this;
  }

  public ResponseCheckMultipleSchemaDataInnerRedemptions addRedeemSkuCodesItem(ResponseCheckMultipleSchemaDataInnerRedemptionsRedeemSkuCodesInner redeemSkuCodesItem) {
    if (this.redeemSkuCodes == null) {
      this.redeemSkuCodes = new ArrayList<>();
    }
    this.redeemSkuCodes.add(redeemSkuCodesItem);
    return this;
  }

  /**
   * Contains redeemed SKU information of the voucher (for voucher type is conditional and support sku)
   * @return redeemSkuCodes
   */
  @javax.annotation.Nullable
  public List<ResponseCheckMultipleSchemaDataInnerRedemptionsRedeemSkuCodesInner> getRedeemSkuCodes() {
    return redeemSkuCodes;
  }

  public void setRedeemSkuCodes(@javax.annotation.Nullable List<ResponseCheckMultipleSchemaDataInnerRedemptionsRedeemSkuCodesInner> redeemSkuCodes) {
    this.redeemSkuCodes = redeemSkuCodes;
  }


  public ResponseCheckMultipleSchemaDataInnerRedemptions redemptionValue(@javax.annotation.Nullable Integer redemptionValue) {
    this.redemptionValue = redemptionValue;
    return this;
  }

  /**
   * Actual redemption value of voucher type &#x3D; conditional
   * @return redemptionValue
   */
  @javax.annotation.Nullable
  public Integer getRedemptionValue() {
    return redemptionValue;
  }

  public void setRedemptionValue(@javax.annotation.Nullable Integer redemptionValue) {
    this.redemptionValue = redemptionValue;
  }


  public ResponseCheckMultipleSchemaDataInnerRedemptions usedStore(@javax.annotation.Nullable ResponseCheckMultipleSchemaDataInnerRedemptionsUsedStore usedStore) {
    this.usedStore = usedStore;
    return this;
  }

  /**
   * Get usedStore
   * @return usedStore
   */
  @javax.annotation.Nullable
  public ResponseCheckMultipleSchemaDataInnerRedemptionsUsedStore getUsedStore() {
    return usedStore;
  }

  public void setUsedStore(@javax.annotation.Nullable ResponseCheckMultipleSchemaDataInnerRedemptionsUsedStore usedStore) {
    this.usedStore = usedStore;
  }


  public ResponseCheckMultipleSchemaDataInnerRedemptions usedDate(@javax.annotation.Nullable String usedDate) {
    this.usedDate = usedDate;
    return this;
  }

  /**
   * Date voucher marked as used in case the voucher has been redeemed. Format (YYYY-MM-DD HH:MM:SS)
   * @return usedDate
   */
  @javax.annotation.Nullable
  public String getUsedDate() {
    return usedDate;
  }

  public void setUsedDate(@javax.annotation.Nullable String usedDate) {
    this.usedDate = usedDate;
  }


  public ResponseCheckMultipleSchemaDataInnerRedemptions billNumber(@javax.annotation.Nullable String billNumber) {
    this.billNumber = billNumber;
    return this;
  }

  /**
   * Bill number for which voucher used/reserved
   * @return billNumber
   */
  @javax.annotation.Nullable
  public String getBillNumber() {
    return billNumber;
  }

  public void setBillNumber(@javax.annotation.Nullable String billNumber) {
    this.billNumber = billNumber;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ResponseCheckMultipleSchemaDataInnerRedemptions responseCheckMultipleSchemaDataInnerRedemptions = (ResponseCheckMultipleSchemaDataInnerRedemptions) o;
    return Objects.equals(this.redeemSkuCodes, responseCheckMultipleSchemaDataInnerRedemptions.redeemSkuCodes) &&
        Objects.equals(this.redemptionValue, responseCheckMultipleSchemaDataInnerRedemptions.redemptionValue) &&
        Objects.equals(this.usedStore, responseCheckMultipleSchemaDataInnerRedemptions.usedStore) &&
        Objects.equals(this.usedDate, responseCheckMultipleSchemaDataInnerRedemptions.usedDate) &&
        Objects.equals(this.billNumber, responseCheckMultipleSchemaDataInnerRedemptions.billNumber);
  }

  @Override
  public int hashCode() {
    return Objects.hash(redeemSkuCodes, redemptionValue, usedStore, usedDate, billNumber);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ResponseCheckMultipleSchemaDataInnerRedemptions {\n");
    sb.append("    redeemSkuCodes: ").append(toIndentedString(redeemSkuCodes)).append("\n");
    sb.append("    redemptionValue: ").append(toIndentedString(redemptionValue)).append("\n");
    sb.append("    usedStore: ").append(toIndentedString(usedStore)).append("\n");
    sb.append("    usedDate: ").append(toIndentedString(usedDate)).append("\n");
    sb.append("    billNumber: ").append(toIndentedString(billNumber)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("redeem_sku_codes");
    openapiFields.add("redemption_value");
    openapiFields.add("used_store");
    openapiFields.add("used_date");
    openapiFields.add("bill_number");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ResponseCheckMultipleSchemaDataInnerRedemptions
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ResponseCheckMultipleSchemaDataInnerRedemptions.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ResponseCheckMultipleSchemaDataInnerRedemptions is not found in the empty JSON string", ResponseCheckMultipleSchemaDataInnerRedemptions.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ResponseCheckMultipleSchemaDataInnerRedemptions.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ResponseCheckMultipleSchemaDataInnerRedemptions` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (jsonObj.get("redeem_sku_codes") != null && !jsonObj.get("redeem_sku_codes").isJsonNull()) {
        JsonArray jsonArrayredeemSkuCodes = jsonObj.getAsJsonArray("redeem_sku_codes");
        if (jsonArrayredeemSkuCodes != null) {
          // ensure the json data is an array
          if (!jsonObj.get("redeem_sku_codes").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `redeem_sku_codes` to be an array in the JSON string but got `%s`", jsonObj.get("redeem_sku_codes").toString()));
          }

          // validate the optional field `redeem_sku_codes` (array)
          for (int i = 0; i < jsonArrayredeemSkuCodes.size(); i++) {
            ResponseCheckMultipleSchemaDataInnerRedemptionsRedeemSkuCodesInner.validateJsonElement(jsonArrayredeemSkuCodes.get(i));
          };
        }
      }
      // validate the optional field `used_store`
      if (jsonObj.get("used_store") != null && !jsonObj.get("used_store").isJsonNull()) {
        ResponseCheckMultipleSchemaDataInnerRedemptionsUsedStore.validateJsonElement(jsonObj.get("used_store"));
      }
      if ((jsonObj.get("used_date") != null && !jsonObj.get("used_date").isJsonNull()) && !jsonObj.get("used_date").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `used_date` to be a primitive type in the JSON string but got `%s`", jsonObj.get("used_date").toString()));
      }
      if ((jsonObj.get("bill_number") != null && !jsonObj.get("bill_number").isJsonNull()) && !jsonObj.get("bill_number").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `bill_number` to be a primitive type in the JSON string but got `%s`", jsonObj.get("bill_number").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ResponseCheckMultipleSchemaDataInnerRedemptions.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ResponseCheckMultipleSchemaDataInnerRedemptions' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ResponseCheckMultipleSchemaDataInnerRedemptions> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ResponseCheckMultipleSchemaDataInnerRedemptions.class));

       return (TypeAdapter<T>) new TypeAdapter<ResponseCheckMultipleSchemaDataInnerRedemptions>() {
           @Override
           public void write(JsonWriter out, ResponseCheckMultipleSchemaDataInnerRedemptions value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ResponseCheckMultipleSchemaDataInnerRedemptions read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ResponseCheckMultipleSchemaDataInnerRedemptions given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ResponseCheckMultipleSchemaDataInnerRedemptions
   * @throws IOException if the JSON string is invalid with respect to ResponseCheckMultipleSchemaDataInnerRedemptions
   */
  public static ResponseCheckMultipleSchemaDataInnerRedemptions fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ResponseCheckMultipleSchemaDataInnerRedemptions.class);
  }

  /**
   * Convert an instance of ResponseCheckMultipleSchemaDataInnerRedemptions to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

